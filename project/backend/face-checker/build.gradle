plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.meta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url = 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// JavaCV dependencies with correct versions
	def javacvVersion = '1.5.9'
	def opencvVersion = '4.7.0'
	implementation "org.bytedeco:javacv:${javacvVersion}"
	implementation "org.bytedeco:javacv-platform:${javacvVersion}"
	implementation "org.bytedeco:opencv:4.7.0-${javacvVersion}"
	implementation "org.bytedeco:opencv-platform:${opencvVersion}-${javacvVersion}"


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.7.0'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'com.auth0:java-jwt:4.4.0'


	 def junitVersion = '5.10.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.platform:junit-platform-commons:1.10.0"
    testImplementation "org.junit.platform:junit-platform-launcher:1.10.0"

    // Spring Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    
    // TestContainers
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'org.testcontainers:mysql:1.19.3'

}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}